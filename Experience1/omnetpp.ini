###################################################################
[Config Que10]
**.ppp[*].queue.frameCapacity = 10  

[Config Que5]
**.ppp[*].queue.frameCapacity = 5  
[Config Que15]
**.ppp[*].queue.frameCapacity = 15
[Config Que20]
**.ppp[*].queue.frameCapacity = 15  
[Config Que30]
**.ppp[*].queue.frameCapacity = 30  
[Config Que40]
**.ppp[*].queue.frameCapacity = 40
[Config Que50]
**.ppp[*].queue.frameCapacity = 50  
[Config Que60]
**.ppp[*].queue.frameCapacity = 60 


[General]
network = Experience1
total-stack = 7MiB
tkenv-plugin-path = ../../../etc/plugins
#debug-on-errors = true
record-eventlog = true
**.server.numPcapRecorders = 1
**.server.pcapRecorder[0].pcapFile = "results/server.pcap"
**.client1.numPcapRecorders = 1
**.client1.pcapRecorder[0].pcapFile = "results/client1.pcap"

## client1 tcp app
**.client1.numTcpApps = 1
**.client1.tcpApp[0].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "server"
**.client1.tcpApp[0].connectPort = 21
**.client1.tcpApp[0].tOpen = 0s
**.client1.tcpApp[0].tSend = 1.0s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 4.0s

# client2 udp app
**.client2.numUdpApps = 1
**.client2.udpApp[0].typename = "UDPBasicBurst"
**.client2.udpApp[0].localPort = 100
**.client2.udpApp[0].destPort = 100
**.client2.udpApp[0].messageLength = 1024B
**.client2.udpApp[0].sendInterval = 0.5s
**.client2.udpApp[0].destAddresses = "server"
**.udpApp[0].chooseDestAddrMode = "perBurst"
**.client2.udpApp[0].burstDuration = 4ms#1Mbps
**.client2.udpApp[0].sleepDuration = 4ms
**.udpApp[0].startTime = 0.1s
**.udpApp[0].stopTime = 4.5s
**.udpApp[0].delayLimit = 3s

# tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1024                                   # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100


# server side
**.server.numTcpApps=1
**.server.numUdpApps=1
**.client2.udpApp[0].burstDuration = 4ms#1Mbps
**.client2.udpApp[0].sleepDuration = 4ms
**.server*.tcpApp[*].typename="TCPSinkApp"
**.server*.udpApp[*].typename="UDPSink"
**.server*.tcpApp[0].localPort = 21
**.server*.udpApp[0].localPort = 100

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

#*.configurator.networkAddress = "10.0.0.0"
*.configurator.config=xml("<config><interface hosts='*' address='192.168.1.x' netmask='255.255.255.x'/></config>")
